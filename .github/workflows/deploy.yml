name: Deploy Backend to EC2

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - "docker-compose.yml"
      - ".github/workflows/deploy-backend.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore SSH key from base64
        run: |
          echo "$DEPLOY_KEY_B64" | base64 -d > smartfocus_ci
          chmod 600 smartfocus_ci
        env:
          DEPLOY_KEY_B64: ${{ secrets.DEPLOY_KEY_B64 }}

      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Test SSH
        run: ssh -i smartfocus_ci ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo OK"

      - name: Sync project to EC2 (rsync)
        run: |
          RSYNC_EXCLUDES="--exclude .git --exclude .github --exclude node_modules --exclude __pycache__"
          # Si tu .env de prod vive en el server:
          # RSYNC_EXCLUDES="$RSYNC_EXCLUDES --exclude .env"
          rsync -az --delete $RSYNC_EXCLUDES -e "ssh -i smartfocus_ci" \
            ./ \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_PATH }}/

      - name: Rebuild & restart backend
        run: |
          ssh -i smartfocus_ci ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            set -e
            cd '${{ secrets.EC2_PATH }}' && \
            docker compose build backend && \
            docker compose up -d --force-recreate --no-deps backend && \
            docker image prune -f
          "
