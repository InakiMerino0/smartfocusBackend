version: "3.9"

services:
  db:
    image: postgres:15
    container_name: smartfocus-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      # ðŸ‘‰ apuntamos al volumen HISTÃ“RICO
      - smartfocus_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    restart: unless-stopped

  backend:
    # Usa imagen publicada (GHCR) si IMAGE_TAG estÃ¡ seteado; si no, build local:
    image: ${IMAGE_NAME:-ghcr.io/inakimerino0/smartfocus-backend}:${IMAGE_TAG:-latest}
    # Si querÃ©s forzar build local, comenta 'image:' y descomenta build:
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    container_name: smartfocus-backend
    env_file:
      - .env
    environment:
      # AsegÃºrate que DATABASE_URL venga del .env
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      PYTHONUNBUFFERED: "1"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    # Opcionales de seguridad/recursos (dejÃ© suaves)
    security_opt:
      - no-new-privileges:true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

volumes:
  # ðŸ‘‰ Reusa EXACTAMENTE el volumen histÃ³rico
  smartfocus_db_data:
    external: true


# ec2-3-144-26-35.us-east-2.compute.amazonaws.com --- IGNORE ---